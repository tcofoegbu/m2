<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>andromda-maven-plugins</artifactId>
        <groupId>org.andromda.maven.plugins</groupId>
        <version>3.3</version>
    </parent>
    <artifactId>andromdapp-maven-plugin</artifactId>
    <packaging>maven-plugin</packaging>
    <name>AndroMDA Application Generator Maven Plugin</name>
    <description>
        A plugin for running AndroMDA's AndroMDApp application generator
        to generate Maven2 AndroMDA powered applications.
    </description>
    <inceptionYear>2005</inceptionYear>
    <scm>
        <connection>scm:cvs:pserver:anonymous:@andromda.cvs.sourceforge.net:/cvsroot/andromda:andromda-all/maven/2/andromdapp</connection>
        <developerConnection>scm:cvs:ext:${cvs_username}@andromda.cvs.sourceforge.net:/cvsroot/andromda:andromda-all</developerConnection>
        <tag>V3_x_HEAD</tag>
        <url>http://andromda.cvs.sourceforge.net/</url>
    </scm>
    <dependencies>
        <dependency>
            <groupId>org.andromda.andromdapp</groupId>
            <artifactId>andromda-andromdapp-core</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>org.andromda.andromdapp.projects</groupId>
            <artifactId>andromda-andromdapp-project-j2ee-maven2</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>org.andromda.andromdapp.projects</groupId>
            <artifactId>andromda-andromdapp-project-richclient-ant</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>org.andromda</groupId>
            <artifactId>andromda-core</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>org.andromda.templateengines</groupId>
            <artifactId>andromda-templateengine-velocity</artifactId>
            <version>${pom.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-utils</artifactId>
            <version>1.0.4</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-core</artifactId>
            <version>2.0.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>javassist</artifactId>
            <version>2.6</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources/xml</directory>
                <targetPath>../plugin-install/org/andromda/maven/plugins/${project.artifactId}</targetPath>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources/deploy/link/windows</directory>
            </resource>
        </resources>
		<plugins>
			<!-- This snippet here creates a zip which can be unzipped into your local repository in order
                 to install the andromdapp plugin (this is necessary because currently maven2 will not search
                 any other repo other than central when trying to install a plugin without a pom.xml, i.e. command line) -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>install</phase>
                    </execution>
                </executions>
				<configuration>
					<tasks>
                        <property name="build.directory" value="${basedir}/target"/>
                        <property name="plugin.install.directory" value="${build.directory}/plugin-install"/>
                        <property name="groupId.directory" value="org/andromda/maven/plugins"/>
                        <copy file="${build.directory}/${project.artifactId}-${project.version}.jar"
                              tofile="${plugin.install.directory}/${groupId.directory}/${project.artifactId}/${project.version}/${project.artifactId}-${project.version}.jar"/>
                        <copy file="${settings.localRepository}/${groupId.directory}/${project.artifactId}/${project.version}/${project.artifactId}-${project.version}.pom"
                              tofile="${plugin.install.directory}/${groupId.directory}/${project.artifactId}/${project.version}/${project.artifactId}-${project.version}.pom"/>
                        <zip basedir="${plugin.install.directory}" destfile="${build.directory}/${project.artifactId}-install-${project.version}.zip"/>
                        <copy file="${build.directory}/${project.artifactId}-install-${project.version}.zip"
                              tofile="${settings.localRepository}/${groupId.directory}/${project.artifactId}/${project.version}/${project.artifactId}-install-${project.version}.zip"/>
					</tasks>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
            </plugin>
		</plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <minmemory>128m</minmemory>
                    <maxmemory>512</maxmemory>
                    <sourcepath>${basedir}/src/java;${basedir}/target/src</sourcepath>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changelog-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <id>All Reports</id>
                        <configuration>
                            <type>range</type>
                            <range>90</range>
                        </configuration>
                        <reports>
                            <report>changelog</report>
                            <report>file-activity</report>
                            <report>dev-activity</report>
                            </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>